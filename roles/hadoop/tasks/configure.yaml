- name: Add hadoop tmp directory
  ansible.builtin.file:
    path: /opt/hadoop_tmp
    owner: almalinux
    group: almalinux
    state: directory
  become: yes
- name: Add hdfs directory
  ansible.builtin.file:
    path: /opt/hadoop_tmp/hdfs
    owner: almalinux
    group: almalinux
    state: directory
  become: yes
- name: config core-site.xml
  ansible.builtin.blockinfile:
    path: /home/almalinux/hadoop-3.4.0/etc/hadoop/core-site.xml
    insertafter: <configuration>
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    block: |
      <property>
          <name>fs.default.name</name>
          <value>hdfs://hostnode:9000/</value>
      </property>
      <property>
          <name>fs.default.FS</name>
          <value>hdfs://hostnode:9000/</value>
      </property>
    state: present
- name: config hdfs-site.xml
  ansible.builtin.blockinfile:
    path: /home/almalinux/hadoop-3.4.0/etc/hadoop/hdfs-site.xml
    insertafter: <configuration>
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    block: |
      <property>
          <name>dfs.datanode.data.dir</name>
          <value>/opt/hadoop_tmp/hdfs/datanode</value>
          <final>true</final>
      </property>
      <property>
          <name>dfs.namenode.name.dir</name>
          <value>/opt/hadoop_tmp/hdfs/namenode</value>
          <final>true</final>
      </property>
      <property>
          <name>dfs.namenode.http-address</name>
          <value>hostnode:9870</value>
      </property>
      <property>
          <name>dfs.replication</name>
          <value>2</value> 
      </property>
    state: present
- name: config yarn-site.xml
  ansible.builtin.blockinfile:
    path: /home/almalinux/hadoop-3.4.0/etc/hadoop/yarn-site.xml
    insertafter: <configuration>
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    block: |
      <property>
          <name>yarn.resourcemanager.resource-tracker.address</name>
          <value>hostnode:8025</value>
      </property>
      <property>
          <name>yarn.resourcemanager.scheduler.address</name>
          <value>hostnode:8035</value>
      </property>
      <property>
          <name>yarn.resourcemanager.address</name>
          <value>hostnode:8050</value>
      </property>
      <property>
          <name>yarn.log-aggregation-enable</name>
          <value>true</value>
      </property>
      <property>
          <name>yarn.nodemanager.resource.cpu-vcores</name>
          <value>4</value>
      </property>
      <property>
          <name>yarn.scheduler.minimum-allocation-vcores</name>
          <value>2</value>
      </property>
      <property>
          <name>yarn.nodemanager.resource.memory-mb</name>
          <value>29013</value>
      </property>
      <property>
          <name>yarn.scheduler.maximum-allocation-mb</name>
          <value>13824</value>
      </property>
    state: present
- name: config mapred-site.xml
  ansible.builtin.blockinfile:
    path: /home/almalinux/hadoop-3.4.0/etc/hadoop/mapred-site.xml
    insertafter: <configuration>
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    block: |
      <property>
          <name>mapreduce.job.tracker</name>
          <value>hostnode:5431</value>
      </property>
      <property>
          <name>mapred.framework.name</name>
          <value>yarn</value>
      </property>
    state: present
- name: Install lxml package dependencies
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - python3-lxml
  become: yes
- name: config capacity-scheduler.xml
  community.general.xml:
    path: /home/almalinux/hadoop-3.4.0/etc/hadoop/capacity-scheduler.xml
    xpath: '/configuration/property[name="yarn.scheduler.capacity.resource-calculator"]/value'
    value: org.apache.hadoop.yarn.util.resource.DominantResourceCalculator

